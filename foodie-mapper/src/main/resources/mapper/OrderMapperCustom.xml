<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.gxb.mapper.OrdersMapperCustom" >

  <resultMap id="myOrderVO" type="com.gxb.pojo.vo.MyOrdersVO">
    <id column="orderId" property="orderId"></id>
    <result column="createdTime" property="createdTime"></result>
    <result column="payMethod" property="payMethod"></result>
    <result column="realPayAmount" property="realPayAmount"></result>
    <result column="isComment" property="isComment"></result>
    <result column="postAmount" property="postAmount"></result>
    <result column="orderStatus" property="orderStatus"></result>
    <result column="isComment" property="isComment"></result>
    <!--
      collection 标签：用于定义关联的list集合类型的封装规则
      property：对应三级分类的list属性名
      ofType：集合的类型，三级分类的vo
    -->
    <collection property="subOrderItemList" select="getSubItems" column="orderId" ofType="com.gxb.pojo.vo.MySubOrderItemVO">
      <result column="itemId" property="itemId"></result>
      <result column="itemName" property="itemName"></result>
      <result column="itemImg" property="itemImg"></result>
      <result column="itemSpecName" property="itemSpecName"></result>
      <result column="buyCounts" property="buyCounts"></result>
      <result column="price" property="price"></result>
    </collection>
  </resultMap>


  <select id="queryMyOrdersDoNotUse" resultMap="myOrderVO" parameterType="map">
    SELECT
	od.id orderId,
  od.created_time createdTime,
	od.pay_method payMethod,
	od.real_pay_amount realPayAmount,
	od.is_comment isComment,
	od.post_amount postAmount,
	os.order_status orderStatus,
	oi.item_id itemId,
	oi.item_name itemName,
	oi.item_img itemImg,
	oi.item_spec_name itemSpecName,
	oi.buy_counts buyCounts,
	oi.price price
FROM
	orders od
	LEFT JOIN order_status os ON od.id = os.order_id
	LEFT JOIN order_items oi ON oi.order_id = od.id
WHERE
	od.user_id = #{paramsMap.userId}
	AND od.is_delete = 0
	<if test="paramsMap.orderStatus != null">
        and  os.order_status = #{paramsMap.orderStatus}
    </if>
ORDER BY
	od.updated_time DESC

  </select>

    <select id="queryMyOrders" resultMap="myOrderVO" parameterType="map">
        SELECT
        od.id orderId,
        od.created_time createdTime,
        od.pay_method payMethod,
        od.real_pay_amount realPayAmount,
        od.is_comment isComment,
        od.post_amount postAmount,
        os.order_status orderStatus
        FROM
        orders od
        LEFT JOIN order_status os ON od.id = os.order_id
        WHERE
        od.user_id = #{paramsMap.userId}
        AND od.is_delete = 0
        <if test="paramsMap.orderStatus != null">
            and  os.order_status = #{paramsMap.orderStatus}
        </if>
        ORDER BY
        od.updated_time DESC

    </select>

    <select id="getSubItems" parameterType="String" resultType="com.gxb.pojo.vo.MySubOrderItemVO">
        select
            oi.item_id itemId,
            oi.item_name itemName,
            oi.item_img itemImg,
            oi.item_spec_name itemSpecName,
            oi.buy_counts buyCounts,
            oi.price price
        from
        order_items oi
        where
        oi.order_id = #{orderId}
    </select>

    <select id="getMyOrderStatusCounts" parameterType="Map" resultType="int">
        SELECT
            COUNT( 1 )
        FROM
            orders o
            LEFT JOIN order_status os ON o.id = os.order_id
        WHERE
            o.user_id = #{paramsMap.userId}
            AND os.order_status = #{paramsMap.orderStatus}
            <if test="paramsMap.isComment != null ">
                and o.is_comment = #{paramsMap.isComment}
            </if>

    </select>

    <select id="getMyOrderTrend" parameterType="Map" resultType="com.gxb.pojo.OrderStatus">
        SELECT
	os.order_id as orderId,
	os.order_status as orderStatus,
	os.created_time as createdTime,
	os.pay_time as payTime,
	os.deliver_time as deliverTime,
	os.success_time as successTime,
	os.close_time as closeTime,
	os.comment_time as commentTime
FROM
	orders o
	LEFT JOIN order_status os ON o.id = os.order_id
WHERE
	o.is_delete = 0
	AND o.user_id = #{paramsMap.userId}
	AND os.order_status IN ( 20, 30, 40 )
ORDER BY
	os.order_id DESC

    </select>
</mapper>
